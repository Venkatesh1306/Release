        -:    0:Source:Z:/On_testing/modbustcp/Sample_Mobus_t.X/test/test.c
        -:    0:Programs:9
        -:    1:/*
        -:    2: * File:   test.c
        -:    3: * Author: Green2
        -:    4: *
        -:    5: * Created on 9 April, 2024, 11:13 AM
        -:    6: * developed for testing the inputs
        -:    7: */
        -:    8:
        -:    9:#include "testhead.h"
        -:   10:
        -:   11:
        -:   12:
        -:   13:// recived packet frame
        -:   14:uint8_t ModbusRxBuftest[INR_SIZE][100] = {
        -:   15:    // error case
        -:   16:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x09, 0x00, 0x07, 0x00, 0x06},
        -:   17:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x03, 0x00, 0x88, 0x00, 0x03},
        -:   18:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x87, 0x00, 0x06},
        -:   19:    {0x0e, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x80, 0x00, 0x01, 0x00, 0x03},
        -:   20:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x26, 0xff, 0xff},
        -:   21:    {0x13, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x30, 0x00, 0x03, 0x06, 0xff, 0xff, 0x06, 0x05, 0x06, 0x05},
        -:   22:    // test case
        -:   23:    {0x0c, 0x03, 0x04, 0x00, 0x00, 0x00, 0x06, 0x01, 0x03, 0x00, 0x02, 0x00, 0x0A},
        -:   24:    {0x0c, 0x03, 0x04, 0x00, 0x00, 0x00, 0x06, 0x01, 0x03, 0x00, 0x08, 0x00, 0x05},
        -:   25:    {0x0c, 0x03, 0x04, 0x00, 0x00, 0x00, 0x06, 0x01, 0x03, 0x00, 0x06, 0x00, 0x05},
        -:   26:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x09, 0x05, 0x06},
        -:   27:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x03, 0x00, 0x09, 0x00, 0x01},
        -:   28:    {0x13, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x30, 0x00, 0x03, 0x06, 0x00, 0x53, 0x06, 0x05, 0x06, 0x05},
        -:   29:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x03, 0x00, 0x30, 0x00, 0x03},
        -:   30:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x23, 0x25, 0x75},
        -:   31:    {0x13, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x32, 0x00, 0x03, 0x06, 0x00, 0x53, 0x09, 0x05, 0x77, 0x05},
        -:   32:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x19, 0x67, 0x45},
        -:   33:    {0x13, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x40, 0x00, 0x03, 0x06, 0x00, 0x53, 0x08, 0x05, 0x66, 0x05},
        -:   34:    {0x0c, 0x03, 0x04, 0x00, 0x00, 0x00, 0x06, 0x01, 0x03, 0x00, 0x05, 0x00, 0x05},
        -:   35:};
        -:   36:
        -:   37:// expected frame to send
        -:   38:uint8_t Test_TXtest[INR_SIZE][100] = {
        -:   39:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x89, 0x01},                                                                                                                         // Function error
        -:   40:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x83, 0x02},                                                                                                                         // F-03 Addr Error
        -:   41:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x86, 0x02},                                                                                                                         // F-06 Addr Error
        -:   42:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x90, 0x02},                                                                                                                         // F-10 Addr Error
        -:   43:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x86, 0x03},                                                                                                                         // F-06 Data Error
        -:   44:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x90, 0x03},                                                                                                                         // F-10 Data Error
        -:   45:    {0x1D, 0x03, 0x04, 0x00, 0x00, 0x00, 0x17, 0x01, 0x03, 0x14, 0x0A, 0xAB, 0x0C, 0x39, 0x0F, 0x7E, 0x0D, 0xE2, 0x0B, 0x6F, 0x0E, 0x3A, 0x08, 0x9D, 0x0F, 0x48, 0x09, 0x10, 0x06, 0xA1}, // F-03
        -:   46:    {0x13, 0x03, 0x04, 0x00, 0x00, 0x00, 0x0D, 0x01, 0x03, 0x0A, 0x08, 0x9D, 0x0F, 0x48, 0x09, 0x10, 0x06, 0xA1, 0x0F, 0x1D},                                                             // F-03
        -:   47:    {0x13, 0x03, 0x04, 0x00, 0x00, 0x00, 0x0D, 0x01, 0x03, 0x0A, 0x0B, 0x6F, 0x0E, 0x3A, 0x08, 0x9D, 0x0F, 0x48, 0x09, 0x10},                                                             // F-03
        -:   48:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x09, 0x05, 0x06},                                                                                                       // F-06
        -:   49:    {0x0B, 0x00, 0x01, 0x00, 0x02, 0x00, 0x05, 0x03, 0x03, 0x02, 0x0f, 0x48},                                                                                                             // F-03
        -:   50:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x30, 0x00, 0x03},                                                                                                       // F-10
        -:   51:    {0x0f, 0x00, 0x01, 0x00, 0x02, 0x00, 0x09, 0x03, 0x03, 0x06, 0x02, 0xA0, 0x05, 0xFE, 0x05, 0x7D},                                                                                     // F-03
        -:   52:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x23, 0x25, 0x75},                                                                                                       // F-06
        -:   53:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x32, 0x00, 0x03},                                                                                                       // F-10
        -:   54:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x19, 0x67, 0x45},                                                                                                       // F-06
        -:   55:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x40, 0x00, 0x03},                                                                                                       // F-10
        -:   56:    {0x13, 0x03, 0x04, 0x00, 0x00, 0x00, 0x0D, 0x01, 0x03, 0x0A, 0x0D, 0xE2, 0x0B, 0x6F, 0x0E, 0x3A, 0x08, 0x9D, 0x0F, 0x48},                                                             // F-03
        -:   57:};
        -:   58:uint16_t Dataregister[150] = {
        -:   59:    0x0304, 0x0554, 0x0AAB, 0x0C39, 0x0F7E, 0x0DE2, 0x0B6F, 0x0E3A, 0x089D, 0x0F48,
        -:   60:    0x0910, 0x06A1, 0x0F1D, 0x002B, 0x0BBE, 0x0DCE, 0x081F, 0x0C7C, 0x06F2, 0x043F,
        -:   61:    0x03E8, 0x0D4D, 0x008E, 0x0A88, 0x0C97, 0x0DA5, 0x0EF7, 0x06B2, 0x0E53, 0x0B81,
        -:   62:    0x03D2, 0x00C5, 0x03E9, 0x02F6, 0x0B32, 0x0AFC, 0x0721, 0x0C80, 0x0415, 0x0E36,
        -:   63:    0x06D8, 0x0E99, 0x0523, 0x0DA9, 0x032C, 0x0FF2, 0x07A3, 0x0BCD, 0x02A0, 0x05FE,
        -:   64:    0x057D, 0x0839, 0x0DD7, 0x07C4, 0x09E1, 0x01AA, 0x09C6, 0x0A1F, 0x0798, 0x08A2,
        -:   65:    0x0BFC, 0x0C3E, 0x08B4, 0x0EAB, 0x0586, 0x0B17, 0x0F9E, 0x0F6D, 0x0A55, 0x0DC4,
        -:   66:    0x0FB3, 0x085D, 0x0AE9, 0x0C22, 0x0D61, 0x062A, 0x067B, 0x0C45, 0x0B60, 0x0493,
        -:   67:    0x0FAA, 0x0D2B, 0x0EA8, 0x03B1, 0x07E0, 0x08E7, 0x0E65, 0x0C9C, 0x014F, 0x00D6,
        -:   68:    0x040B, 0x01C8, 0x07B6, 0x0F3D, 0x037E, 0x0349, 0x0464, 0x0282, 0x09A7, 0x050F};
        -:   69:
        -:   70:// uint16_t InputRegister[100] = {0x00ff, 0x3c7e, 0x0302, 0xFFFF, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0xff00, 0x00ff, 0x0000, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0xFFFF, 0x00ff, 0x00ff, 0x00ff, 0xff00, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e};
        -:   71:
        -:   72:/*
        -:   73:main function for testing
        -:   74:generates the expected frame by cosidering the ModbusRxBuf
        -:   75:stores the frame in Test_TX
        -:   76:finally checks the expected and actual outputs are same
        -:   77:expected -- Test_Tx
        -:   78:*/
        1:   79:int main()
        -:   80:{
        -:   81:
        -:   82:   int j;
       19:   83:   for (incrs = 0; incrs < INR_SIZE; incrs++)
        -:   84:   {
      282:   85:      for (j = 0; j <= ModbusRxBuftest[incrs][0]; j++)
        -:   86:      {
      264:   87:         ModbusRxBuf[j] = ModbusRxBuftest[incrs][j + 1];
        -:   88:      }
      274:   89:      for (j = 0; j <= Test_TXtest[incrs][0]; j++)
        -:   90:      {
      256:   91:         Test_tx[j] = Test_TXtest[incrs][j + 1];
        -:   92:      }
       18:   93:      if (ModbusRxBuf[7] == 0x03)
        -:   94:      {
        -:   95:         // Data register
        7:   96:         uint16_t Dataregister[150] = {
        -:   97:             0x0304, 0x0554, 0x0AAB, 0x0C39, 0x0F7E, 0x0DE2, 0x0B6F, 0x0E3A, 0x089D, 0x0F48,
        -:   98:             0x0910, 0x06A1, 0x0F1D, 0x002B, 0x0BBE, 0x0DCE, 0x081F, 0x0C7C, 0x06F2, 0x043F,
        -:   99:             0x03E8, 0x0D4D, 0x008E, 0x0A88, 0x0C97, 0x0DA5, 0x0EF7, 0x06B2, 0x0E53, 0x0B81,
        -:  100:             0x03D2, 0x00C5, 0x03E9, 0x02F6, 0x0B32, 0x0AFC, 0x0721, 0x0C80, 0x0415, 0x0E36,
        -:  101:             0x06D8, 0x0E99, 0x0523, 0x0DA9, 0x032C, 0x0FF2, 0x07A3, 0x0BCD, 0x02A0, 0x05FE,
        -:  102:             0x057D, 0x0839, 0x0DD7, 0x07C4, 0x09E1, 0x01AA, 0x09C6, 0x0A1F, 0x0798, 0x08A2,
        -:  103:             0x0BFC, 0x0C3E, 0x08B4, 0x0EAB, 0x0586, 0x0B17, 0x0F9E, 0x0F6D, 0x0A55, 0x0DC4,
        -:  104:             0x0FB3, 0x085D, 0x0AE9, 0x0C22, 0x0D61, 0x062A, 0x067B, 0x0C45, 0x0B60, 0x0493,
        -:  105:             0x0FAA, 0x0D2B, 0x0EA8, 0x03B1, 0x07E0, 0x08E7, 0x0E65, 0x0C9C, 0x014F, 0x00D6,
        -:  106:             0x040B, 0x01C8, 0x07B6, 0x0F3D, 0x037E, 0x0349, 0x0464, 0x0282, 0x09A7, 0x050F};
        -:  107:
        7:  108:         modbusTcpFrame(&ModbusRxBuf[0], &Dataregister[0], &ModbusTxBuf[0], &ModbusTxLength); // main call function
        -:  109:
        7:  110:         Test_ing(ModbusTxBuf, Test_tx); // comparing expected and actual frame
        -:  111:
        7:  112:         printfunction(); // printing the output
        -:  113:      }
        -:  114:      else
        -:  115:      {
       11:  116:         modbusTcpFrame(&ModbusRxBuf[0], &Dataregister[0], &ModbusTxBuf[0], &ModbusTxLength); // main call function
        -:  117:
       11:  118:         Test_ing(ModbusTxBuf, Test_tx); // comparing expected and actual frame
        -:  119:
       11:  120:         printfunction(); // printing the output
        -:  121:      }
        -:  122:   }
        -:  123:}
