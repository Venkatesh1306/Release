        -:    0:Source:Z:/On_testing/modbustcp/SampleModbusTCP_8Fn/test/test.c
        -:    0:Programs:14
        -:    1:/*
        -:    2: * File:   test.c
        -:    3: * Author: Green2
        -:    4: *
        -:    5: * Created on 9 April, 2024, 11:13 AM
        -:    6: * developed for testing the inputs
        -:    7: */
        -:    8:
        -:    9:#include "testhead.h"
        -:   10:// recived packet frame
        -:   11:uint8_t ModbusRxBuftest[INR_SIZE][100] = {
        -:   12:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x09, 0x00, 0x07, 0x00, 0x06},
        -:   13:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x01, 0x00, 0x01, 0x00, 0x09},
        -:   14:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x01, 0x00, 0x11, 0x00, 0x09},
        -:   15:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x01, 0x01, 0x51, 0x00, 0x09},
        -:   16:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x02, 0x00, 0x02, 0x00, 0x03},
        -:   17:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x02, 0x00, 0x18, 0x00, 0x0f},
        -:   18:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x02, 0x01, 0x56, 0x00, 0x03},
        -:   19:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x03, 0x00, 0x09, 0x00, 0x03},
        -:   20:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x03, 0x00, 0x7f, 0x00, 0x03},
        -:   21:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x04, 0x00, 0x06, 0x00, 0x02},
        -:   22:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x04, 0x00, 0x8d, 0x00, 0x02},
        -:   23:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x05, 0x00, 0x53, 0xff, 0x00},
        -:   24:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x05, 0x01, 0x03, 0xff, 0x00},
        -:   25:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x05, 0x00, 0x07, 0xfc, 0x00},
        -:   26:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x03, 0x03, 0x04},
        -:   27:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x03, 0x00, 0x03, 0x00, 0x01},
        -:   28:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x8f, 0x00, 0x06},
        -:   29:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x09, 0xff, 0xff},
        -:   30:    {0x11, 0x00, 0x01, 0x00, 0x02, 0x00, 0x0B, 0x03, 0x0F, 0x00, 0x01, 0x00, 0x15, 0x04, 0xcd, 0x01, 0x03, 0x02},
        -:   31:    {0x11, 0x00, 0x01, 0x00, 0x02, 0x00, 0x0B, 0x03, 0x0F, 0x01, 0x55, 0x00, 0x15, 0x04, 0xcd, 0x01, 0x03, 0x02},
        -:   32:    {0x11, 0x00, 0x01, 0x00, 0x02, 0x00, 0x0B, 0x03, 0x0F, 0x00, 0x01, 0x00, 0x15, 0x04, 0xff, 0xff, 0x03, 0x02},
        -:   33:    {0x11, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x06, 0x00, 0x02, 0x04, 0x03, 0x04, 0x3c, 0x7e},
        -:   34:    {0x0e, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x90, 0x00, 0x01, 0x00, 0x03},
        -:   35:    {0x13, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x0C, 0x00, 0x03, 0x06, 0xff, 0xff, 0x06, 0x05, 0x06, 0x05},
        -:   36:    {0x0c, 0x03, 0x04, 0x00, 0x00, 0x00, 0x06, 0x01, 0x03, 0x00, 0x02, 0x00, 0x05},
        -:   37:    {0x0c, 0x03, 0x04, 0x00, 0x00, 0x00, 0x06, 0x01, 0x03, 0x00, 0x08, 0x00, 0x05},
        -:   38:    {0x0c, 0x03, 0x04, 0x00, 0x00, 0x00, 0x06, 0x01, 0x03, 0x00, 0x06, 0x00, 0x05},
        -:   39:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x09, 0x05, 0x06},
        -:   40:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x03, 0x00, 0x09, 0x00, 0x01},
        -:   41:    {0x13, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x30, 0x00, 0x03, 0x06, 0x00, 0x53, 0x06, 0x05, 0x06, 0x05},
        -:   42:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x03, 0x00, 0x30, 0x00, 0x03},
        -:   43:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x23, 0x25, 0x75},
        -:   44:    {0x13, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x32, 0x00, 0x03, 0x06, 0x00, 0x53, 0x09, 0x05, 0x77, 0x05},
        -:   45:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x19, 0x67, 0x45},
        -:   46:    {0x13, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x40, 0x00, 0x03, 0x06, 0x00, 0x53, 0x08, 0x05, 0x66, 0x05},
        -:   47:    {0x0c, 0x03, 0x04, 0x00, 0x00, 0x00, 0x06, 0x01, 0x03, 0x00, 0x05, 0x00, 0x05},
        -:   48:};
        -:   49:
        -:   50:// expected frame to send
        -:   51:uint8_t expected_TXA[INR_SIZE][100] = {
        -:   52:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x89, 0x01},                                                             // Function ErrorCrt
        -:   53:    {0x0b, 0x00, 0x01, 0x00, 0x02, 0x00, 0x05, 0x03, 0x01, 0x02, 0x04, 0x01},                                                 // F-01
        -:   54:    {0x0b, 0x00, 0x01, 0x00, 0x02, 0x00, 0x05, 0x03, 0x01, 0x02, 0x54, 0x01},                                                 // F-01
        -:   55:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x81, 0x02},                                                             // F-01 Addr Error
        -:   56:    {0x0A, 0x00, 0x01, 0x00, 0x02, 0x00, 0x04, 0x03, 0x02, 0x01, 0x02},                                                       // F-02
        -:   57:    {0x0b, 0x00, 0x01, 0x00, 0x02, 0x00, 0x05, 0x03, 0x02, 0x02, 0x0A, 0x56},                                                 // F-02
        -:   58:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x82, 0x02},                                                             // F-02 Addr Error
        -:   59:    {0x0f, 0x00, 0x01, 0x00, 0x02, 0x00, 0x09, 0x03, 0x03, 0x6, 0x0f, 0x48, 0x09, 0x10, 0x06, 0xA1},                          // f-03
        -:   60:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x83, 0x02},                                                             // F-03 Addr Error
        -:   61:    {0x0D, 0x00, 0x01, 0x00, 0x02, 0x00, 0x07, 0x03, 0x04, 0x4, 0x0b, 0x6f, 0x0e, 0x3a},                                      // F-04
        -:   62:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x84, 0x02},                                                             // F-04 Addr Error
        -:   63:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x05, 0x00, 0x53, 0xff, 0x00},                                           // F-05
        -:   64:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x85, 0x02},                                                             // F-05 Addr Error
        -:   65:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x85, 0x03},                                                             // F-05 Data Error
        -:   66:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x03, 0x03, 0x04},                                           // F-06
        -:   67:    {0x0b, 0x00, 0x01, 0x00, 0x02, 0x00, 0x05, 0x03, 0x03, 0x02, 0x0c, 0x39},                                                 // F-03
        -:   68:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x86, 0x02},                                                             // F-06 Adrr Error
        -:   69:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x86, 0x03},                                                             // F-06 Data Error
        -:   70:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x0F, 0x00, 0x01, 0x00, 0x15},                                           // F-0F
        -:   71:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x8F, 0x02},                                                             // F-0F Addr Error
        -:   72:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x8F, 0x03},                                                             // F-0F Data Error
        -:   73:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x06, 0x00, 0x02},                                           // F-10
        -:   74:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x90, 0x02},                                                             // F-10 Addr Error
        -:   75:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x90, 0x03},                                                             // F-10 Data Error
        -:   76:    {0x13, 0x03, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x01, 0x03, 0x0A, 0x0A, 0xAB, 0x0C, 0x39, 0x0F, 0x7E, 0x0D, 0xE2, 0x0B, 0x6F}, // F-03
        -:   77:    {0x13, 0x03, 0x04, 0x00, 0x00, 0x00, 0x0D, 0x01, 0x03, 0x0A, 0x08, 0x9D, 0x0F, 0x48, 0x09, 0x10, 0x06, 0xA1, 0x0F, 0x1D}, // F-03
        -:   78:    {0x13, 0x03, 0x04, 0x00, 0x00, 0x00, 0x0D, 0x01, 0x03, 0x0A, 0x0B, 0x6F, 0x0E, 0x3A, 0x08, 0x9D, 0x0F, 0x48, 0x09, 0x10}, // F-03
        -:   79:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x09, 0x05, 0x06},                                           // F-06
        -:   80:    {0x0B, 0x00, 0x01, 0x00, 0x02, 0x00, 0x05, 0x03, 0x03, 0x02, 0x0f, 0x48},                                                 // F-03
        -:   81:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x30, 0x00, 0x03},                                           // F-10
        -:   82:    {0x0f, 0x00, 0x01, 0x00, 0x02, 0x00, 0x09, 0x03, 0x03, 0x06, 0x02, 0xA0, 0x05, 0xFE, 0x05, 0x7D},                         // F-03
        -:   83:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x23, 0x25, 0x75},                                           // F-06
        -:   84:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x32, 0x00, 0x03},                                           // F-10
        -:   85:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x19, 0x67, 0x45},                                           // F-06
        -:   86:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x40, 0x00, 0x03},                                           // F-10
        -:   87:    {0x13, 0x03, 0x04, 0x00, 0x00, 0x00, 0x0D, 0x01, 0x03, 0x0A, 0x0D, 0xE2, 0x0B, 0x6F, 0x0E, 0x3A, 0x08, 0x9D, 0x0F, 0x48}, // F-03
        -:   88:};
        -:   89:
        -:   90:// Data register
        -:   91:uint16_t Dataregister[150] = {
        -:   92:    0x0304, 0x0554, 0x0AAB, 0x0C39, 0x0F7E, 0x0DE2, 0x0B6F, 0x0E3A, 0x089D, 0x0F48,
        -:   93:    0x0910, 0x06A1, 0x0F1D, 0x002B, 0x0BBE, 0x0DCE, 0x081F, 0x0C7C, 0x06F2, 0x043F,
        -:   94:    0x03E8, 0x0D4D, 0x008E, 0x0A88, 0x0C97, 0x0DA5, 0x0EF7, 0x06B2, 0x0E53, 0x0B81,
        -:   95:    0x03D2, 0x00C5, 0x03E9, 0x02F6, 0x0B32, 0x0AFC, 0x0721, 0x0C80, 0x0415, 0x0E36,
        -:   96:    0x06D8, 0x0E99, 0x0523, 0x0DA9, 0x032C, 0x0FF2, 0x07A3, 0x0BCD, 0x02A0, 0x05FE,
        -:   97:    0x057D, 0x0839, 0x0DD7, 0x07C4, 0x09E1, 0x01AA, 0x09C6, 0x0A1F, 0x0798, 0x08A2,
        -:   98:    0x0BFC, 0x0C3E, 0x08B4, 0x0EAB, 0x0586, 0x0B17, 0x0F9E, 0x0F6D, 0x0A55, 0x0DC4,
        -:   99:    0x0FB3, 0x085D, 0x0AE9, 0x0C22, 0x0D61, 0x062A, 0x067B, 0x0C45, 0x0B60, 0x0493,
        -:  100:    0x0FAA, 0x0D2B, 0x0EA8, 0x03B1, 0x07E0, 0x08E7, 0x0E65, 0x0C9C, 0x014F, 0x00D6,
        -:  101:    0x040B, 0x01C8, 0x07B6, 0x0F3D, 0x037E, 0x0349, 0x0464, 0x0282, 0x09A7, 0x050F};
        -:  102:uint16_t COIL1[150] = {
        -:  103:    0x0304, 0x0554, 0x0AAB, 0x0C39, 0x0F7E, 0x0DE2, 0x0B6F, 0x0E3A, 0x089D, 0x0F48,
        -:  104:    0x0910, 0x06A1, 0x0F1D, 0x002B, 0x0BBE, 0x0DCE, 0x081F, 0x0C7C, 0x06F2, 0x043F,
        -:  105:    0x03E8, 0x0D4D, 0x008E, 0x0A88, 0x0C97, 0x0DA5, 0x0EF7, 0x06B2, 0x0E53, 0x0B81,
        -:  106:    0x03D2, 0x00C5, 0x03E9, 0x02F6, 0x0B32, 0x0AFC, 0x0721, 0x0C80, 0x0415, 0x0E36,
        -:  107:    0x06D8, 0x0E99, 0x0523, 0x0DA9, 0x032C, 0x0FF2, 0x07A3, 0x0BCD, 0x02A0, 0x05FE,
        -:  108:    0x057D, 0x0839, 0x0DD7, 0x07C4, 0x09E1, 0x01AA, 0x09C6, 0x0A1F, 0x0798, 0x08A2,
        -:  109:    0x0BFC, 0x0C3E, 0x08B4, 0x0EAB, 0x0586, 0x0B17, 0x0F9E, 0x0F6D, 0x0A55, 0x0DC4,
        -:  110:    0x0FB3, 0x085D, 0x0AE9, 0x0C22, 0x0D61, 0x062A, 0x067B, 0x0C45, 0x0B60, 0x0493,
        -:  111:    0x0FAA, 0x0D2B, 0x0EA8, 0x03B1, 0x07E0, 0x08E7, 0x0E65, 0x0C9C, 0x014F, 0x00D6,
        -:  112:    0x040B, 0x01C8, 0x07B6, 0x0F3D, 0x037E, 0x0349, 0x0464, 0x0282, 0x09A7, 0x050F};
        -:  113:/*
        -:  114:main function for testing
        -:  115:generates the expected frame by cosidering the ModbusRxBuf
        -:  116:stores the frame in expec_TX
        -:  117:finally checks the expected and actual outputs are same
        -:  118:expected -- expec_TX
        -:  119:*/
        1:  120:int main()
        -:  121:{
        -:  122:
        -:  123:   int j;
       37:  124:   for (incrs = 0; incrs < INR_SIZE; incrs++)
        -:  125:   {
      554:  126:      for (j = 0; j <= ModbusRxBuftest[incrs][0]; j++)
        -:  127:      {
      518:  128:         ModbusRxBuf[j] = ModbusRxBuftest[incrs][j + 1];
        -:  129:      }
      493:  130:      for (j = 0; j <= expected_TXA[incrs][0]; j++)
        -:  131:      {
      457:  132:         expec_TX[j] = expected_TXA[incrs][j + 1];
        -:  133:      }
       36:  134:      if (ModbusRxBuf[7] == 0x01 || ModbusRxBuf[7] == 0x02 || ModbusRxBuf[7] == 0x03 || ModbusRxBuf[7] == 0x04)
       17:  135:      {
        -:  136:
       17:  137:         uint16_t Dataregister[150] = {
        -:  138:             0x0304, 0x0554, 0x0AAB, 0x0C39, 0x0F7E, 0x0DE2, 0x0B6F, 0x0E3A, 0x089D, 0x0F48,
        -:  139:             0x0910, 0x06A1, 0x0F1D, 0x002B, 0x0BBE, 0x0DCE, 0x081F, 0x0C7C, 0x06F2, 0x043F,
        -:  140:             0x03E8, 0x0D4D, 0x008E, 0x0A88, 0x0C97, 0x0DA5, 0x0EF7, 0x06B2, 0x0E53, 0x0B81,
        -:  141:             0x03D2, 0x00C5, 0x03E9, 0x02F6, 0x0B32, 0x0AFC, 0x0721, 0x0C80, 0x0415, 0x0E36,
        -:  142:             0x06D8, 0x0E99, 0x0523, 0x0DA9, 0x032C, 0x0FF2, 0x07A3, 0x0BCD, 0x02A0, 0x05FE,
        -:  143:             0x057D, 0x0839, 0x0DD7, 0x07C4, 0x09E1, 0x01AA, 0x09C6, 0x0A1F, 0x0798, 0x08A2,
        -:  144:             0x0BFC, 0x0C3E, 0x08B4, 0x0EAB, 0x0586, 0x0B17, 0x0F9E, 0x0F6D, 0x0A55, 0x0DC4,
        -:  145:             0x0FB3, 0x085D, 0x0AE9, 0x0C22, 0x0D61, 0x062A, 0x067B, 0x0C45, 0x0B60, 0x0493,
        -:  146:             0x0FAA, 0x0D2B, 0x0EA8, 0x03B1, 0x07E0, 0x08E7, 0x0E65, 0x0C9C, 0x014F, 0x00D6,
        -:  147:             0x040B, 0x01C8, 0x07B6, 0x0F3D, 0x037E, 0x0349, 0x0464, 0x0282, 0x09A7, 0x050F};
        -:  148:
       17:  149:         modbusTcpFrame(&ModbusRxBuf[0], &Dataregister[0], &ModbusTxBuf[0], &ModbusTxLength); // main call function
        -:  150:
       17:  151:         Test_ing(ModbusTxBuf, expec_TX); // comparing expected and actual frame
        -:  152:
       17:  153:         printfunction(); // printing the output
        -:  154:      }
        -:  155:
        -:  156:      else
        -:  157:      {
       19:  158:         modbusTcpFrame(&ModbusRxBuf[0], &Dataregister[0], &ModbusTxBuf[0], &ModbusTxLength); // main call function
        -:  159:
       19:  160:         Test_ing(ModbusTxBuf, expec_TX); // comparing expected and actual frame
        -:  161:
       19:  162:         printfunction(); // printing the output
        -:  163:      }
        -:  164:   }
        -:  165:}
